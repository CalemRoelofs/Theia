#!/bin/bash

# if any of the commands in your code fails for any reason, the entire script fails
set -o errexit
# fail exit if one of your pipe command fails
set -o pipefail
# exits if any of your variables is not set
set -o nounset

postgres_ready() {
python << END
import sys

import psycopg2

try:
    psycopg2.connect(
        dbname="${POSTGRES_DB}",
        user="${POSTGRES_USER}",
        password="${POSTGRES_PASSWORD}",
        host="${POSTGRES_HOST}",
        port="${POSTGRES_PORT}",
    )
except psycopg2.OperationalError as e:
    print(e)
    sys.exit(-1)
sys.exit(0)

END
}

redis_ready() {
python << END
import sys

import redis

rs = redis.Redis.from_url(
    "redis://redis:6379/0+",
    socket_connect_timeout=1,
)


try:
    rs.ping()
except (redis.exceptions.ConnectionError, redis.exceptions.BusyLoadingError):
    sys.exit(-1)

sys.exit(0)

END
}
until postgres_ready && redis_ready; do
  >&2 echo 'Waiting for PostgreSQL and Redis to become available...'
  sleep 1
done
>&2 echo 'PostgreSQL and Redis are available'

exec "$@"
