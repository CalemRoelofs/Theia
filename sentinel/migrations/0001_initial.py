# -*- coding: utf-8 -*-
# Generated by Django 3.2.5 on 2021-09-06 18:03
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations
from django.db import models

import sentinel.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [("django_celery_beat", "0015_edit_solarschedule_events_choices")]

    operations = [
        migrations.CreateModel(
            name="AlertEndpoint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=512, verbose_name="Name")),
                (
                    "service",
                    models.CharField(
                        choices=[
                            ("discord", "Discord"),
                            ("msteams", "Microsoft Teams"),
                            ("slack", "Slack"),
                            ("telegram", "Telegram"),
                            ("email", "Email"),
                        ],
                        default="discord",
                        max_length=30,
                        verbose_name="Endpoint Type",
                    ),
                ),
                (
                    "url",
                    models.CharField(
                        max_length=512,
                        validators=[sentinel.validators.webhook_validator],
                        verbose_name="Webhook URL/Email Address",
                    ),
                ),
            ],
            options={
                "verbose_name": "Alert Endpoint",
                "verbose_name_plural": "Alert Endpoints",
            },
        ),
        migrations.CreateModel(
            name="ContactGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "alert_endpoints",
                    models.ManyToManyField(
                        blank=True,
                        related_name="contact_groups",
                        to="sentinel.AlertEndpoint",
                    ),
                ),
            ],
            options={
                "verbose_name": "Contact Group",
                "verbose_name_plural": "Contact Groups",
            },
        ),
        migrations.CreateModel(
            name="Server",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, unique=True, verbose_name="Name"),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        unique=True, verbose_name="IP Address"
                    ),
                ),
                (
                    "domain_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Fully Qualified Domain Name",
                    ),
                ),
                (
                    "description",
                    models.CharField(max_length=512, verbose_name="Description"),
                ),
                (
                    "developer",
                    models.CharField(max_length=255, verbose_name="Developer"),
                ),
                ("sysadmin", models.CharField(max_length=255, verbose_name="Sysadmin")),
                (
                    "date_added",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="Date Added",
                    ),
                ),
                (
                    "date_last_checked",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Last Checked"
                    ),
                ),
                (
                    "scan_frequency_value",
                    models.PositiveIntegerField(
                        default=10, verbose_name="Scan Frequency Value"
                    ),
                ),
                (
                    "scan_frequency_period",
                    models.CharField(
                        choices=[
                            ("minutes", "Minutes"),
                            ("hours", "Hours"),
                            ("days", "Days"),
                            ("weeks", "Weeks"),
                        ],
                        default="minutes",
                        max_length=20,
                        verbose_name="Scan Frequency Period",
                    ),
                ),
                (
                    "check_open_ports",
                    models.BooleanField(default=True, verbose_name="Check Open Ports"),
                ),
                (
                    "check_security_headers",
                    models.BooleanField(
                        default=True, verbose_name="Check Security Headers"
                    ),
                ),
                (
                    "check_ssl_certs",
                    models.BooleanField(
                        default=True, verbose_name="Check SSL Certificates"
                    ),
                ),
                (
                    "check_latency",
                    models.BooleanField(default=True, verbose_name="Check Latency"),
                ),
                (
                    "check_dns_records",
                    models.BooleanField(default=True, verbose_name="Check DNS Records"),
                ),
                (
                    "contact_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="sentinel.contactgroup",
                    ),
                ),
            ],
            options={"verbose_name": "Server", "verbose_name_plural": "Servers"},
        ),
        migrations.CreateModel(
            name="ServerProfile",
            fields=[
                (
                    "server",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="sentinel.server",
                    ),
                ),
                (
                    "is_up",
                    models.BooleanField(default=False, verbose_name="Host Reachable"),
                ),
                (
                    "open_ports",
                    models.JSONField(
                        blank=True, default=None, null=True, verbose_name="Open Ports"
                    ),
                ),
                (
                    "security_headers",
                    models.JSONField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Security Headers",
                    ),
                ),
                (
                    "ssl_certs",
                    models.JSONField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="SSL Certificates",
                    ),
                ),
                (
                    "latency",
                    models.JSONField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Latency Results",
                    ),
                ),
                (
                    "dns_records",
                    models.JSONField(
                        blank=True, default=None, null=True, verbose_name="DNS Records"
                    ),
                ),
            ],
            options={
                "verbose_name": "Server Profile",
                "verbose_name_plural": "Server Profiles",
            },
        ),
        migrations.CreateModel(
            name="ServerTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("task_name", models.CharField(max_length=255)),
                (
                    "server",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sentinel.server",
                    ),
                ),
                (
                    "task",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="django_celery_beat.periodictask",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProfileChangelog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="Date Modified",
                    ),
                ),
                (
                    "changed_field",
                    models.CharField(max_length=255, verbose_name="Changed Field"),
                ),
                (
                    "old_value",
                    models.JSONField(blank=True, null=True, verbose_name="Old Value"),
                ),
                (
                    "new_value",
                    models.JSONField(blank=True, null=True, verbose_name="New Value"),
                ),
                (
                    "acknowledged",
                    models.BooleanField(default=False, verbose_name="Acknowledged"),
                ),
                (
                    "server",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sentinel.server",
                    ),
                ),
            ],
            options={
                "verbose_name": "Profile Changelog",
                "verbose_name_plural": "Profile Changelogs",
            },
        ),
        migrations.CreateModel(
            name="AlertLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="Timestamp",
                    ),
                ),
                ("message", models.TextField(verbose_name="Message")),
                (
                    "status_code",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Status Code"
                    ),
                ),
                (
                    "alert_endpoint",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sentinel.alertendpoint",
                    ),
                ),
                (
                    "server",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sentinel.server",
                    ),
                ),
            ],
            options={"verbose_name": "Alert Log", "verbose_name_plural": "Alert Logs"},
        ),
    ]
