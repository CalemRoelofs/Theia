name: CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      #----------------------------------------------
      #          check for black formatting
      #----------------------------------------------
      - name: Code Quality
        run: poetry run black . --check
        
      #----------------------------------------------
      #      install Nmap for port scan tasks
      #----------------------------------------------  
      - name: Install Nmap
        run: sudo apt-get install nmap -y
        
      #----------------------------------------------
      #                 run tests
      #----------------------------------------------  
      - name: Test with pytest
        env:
          DJANGO_SETTINGS_MODULE: theia.settings.CI
        run: poetry run pytest --cov . -n 2
        
  docker:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Copy Env File
      env:
        DJANGO_SETTINGS_MODULE: theia.settings.prod
      run: cp .env.example .env

    - name: Start containers
      run: docker-compose -f "docker-compose.yml" up -d --build

    - name: Stop containers
      if: always()
      run: docker-compose -f "docker-compose.yml" down
